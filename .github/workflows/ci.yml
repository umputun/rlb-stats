name: CI Build

on:
  push:
    branches:
    tags:
  pull_request:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout code
      uses: actions/checkout@v2

    - name: debug if needed
      run: |
        export DEBUG=${DEBUG:-false}
        if [[ "$DEBUG" == "true" ]]; then
          env
        fi
      env:
        DEBUG: ${{secrets.DEBUG}}

    - name: install go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13

    - name: build and test
      run: |
        echo $TZ
        go test -mod=vendor -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
        cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "_mock.go" > $GITHUB_WORKSPACE/profile.cov
      env:
        TZ: America/Chicago

    - name: install golangci-lint
      run: |
        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.20.0

    - name: install goveralls
      run: GO111MODULE=off go get -u -v github.com/mattn/goveralls

    - name: run linters
      run: $GITHUB_WORKSPACE/golangci-lint run --config $GITHUB_WORKSPACE/.golangci.yml ./... ;

    - name: submit coverage
      run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/profile.cov
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: build image
      run:  docker build --build-arg SKIP_TEST=true --build-arg CI=github .
